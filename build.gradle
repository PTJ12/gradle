
buildscript {
    ext {
        springBootVersion = "2.7.2"
    }
}

plugins {
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


/* 所有子项目的通用配置 */
allprojects {
    /* 使用二进制插件 */
    apply plugin: 'java' /* java是Gradle的核心插件，是内置的，内置插件不需要配置依赖路径 */
    apply plugin: 'idea' /* 同上  让Gradle自动生成Intellij的项目文件*/
    /* 注意gradle插件不再自动应用，所以这里需要指定 */
    apply plugin: 'org.springframework.boot'
    /* 依赖管理插件仍然是一个spring-boot-gradle-plugin传递依赖，所以无需在build.gradle配置中明确列出此依赖。 */
    apply plugin: 'io.spring.dependency-management' /* 依赖管理，用来传递spring的依赖 */

    group = 'cn.ut'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    /* java编译的时候缺省状态下会因为中文字符而失败 */
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }


    /* 添加通用依赖 */
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        //mybatis-plus
        implementation group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.3.1.tmp'
        //devtool 用于配置热部署的，可以删去
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        //mysql数据库依赖
        runtimeOnly 'mysql:mysql-connector-java'
        implementation 'javax.xml.bind:jaxb-api:2.3.0'
    }
}


tasks.named('test') {
    useJUnitPlatform()
}

//解决控制台乱码
tasks.withType(JavaCompile) {
    options.encoding = "utf-8"
}
tasks.withType(Javadoc) {
    options.encoding = "utf-8"
}


bootJar {
    enabled = false
}

jar {
    enabled = true
}